library("nnet", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
# Returns the stack of RScript files
rscript_stack <- function() {
Filter(Negate(is.null), lapply(sys.frames(), function(x) x$ofile))
}
# Returns the current RScript file path
rscript_current <- function() {
stack <- rscript_stack()
r <- as.character(stack[length(stack)])
first_char <- substring(r, 1, 1)
if (first_char != '~' && first_char != .Platform$file.sep) {
r <- file.path(getwd(), r)
}
r
}
# Sources relative to the current script
source_relative <- function(relative_path, ...) {
source(file.path(dirname(rscript_current()), relative_path), ...)
}
source_relative()
?getwd()
dir()
?file.path
dirs
source('~/.active-rstudio-document', echo=TRUE)
?setwd
source('~/.active-rstudio-document', echo=TRUE)
library(rgdal); library(plyr); library(fields)
rm(list=ls())
getwd()
hbin<-hexbin(df$X, df$Y,xbins=50,IDs=TRUE)
hvp<-plot(hbin)
mtrans<-hexTapply(hbin,df$Z,mean,na.rm=TRUE)
pushHexport(hvp$plot.vp)
cCut <- seq(0,0.5, by=0.1)
grid.hexagons(hbin,style='colorscale',pen=0,border='white',use.count=FALSE,
minarea = 0.04, maxarea = 1, mincnt = 500, maxcnt = 3000,
cell.at=mtrans, colramp=LinGray, colorcut= cCut)
popViewport()
library("hexbin", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
hbin<-hexbin(df$X, df$Y,xbins=50,IDs=TRUE)
hvp<-plot(hbin)
mtrans<-hexTapply(hbin,df$Z,mean,na.rm=TRUE)
pushHexport(hvp$plot.vp)
cCut <- seq(0,0.5, by=0.1)
grid.hexagons(hbin,style='colorscale',pen=0,border='white',use.count=FALSE,
minarea = 0.04, maxarea = 1, mincnt = 500, maxcnt = 3000,
cell.at=mtrans, colramp=LinGray, colorcut= cCut)
popViewport()
source('~/.active-rstudio-document', echo=TRUE)
p <- ggplot(mm, aes(x = factor(weekNum) , y = scaleMean * 4))
p <- p + geom_line()
#p <- p + stat_smooth(se = FALSE, aes(group = 1), n=30, fill="red")
p <- p + coord_equal()
p
mm
p <- ggplot(mm, aes(x = weekNum , y = scaleMean * 4))
p <- p + geom_line()
#p <- p + stat_smooth(se = FALSE, aes(group = 1), n=30, fill="red")
p <- p + coord_equal()
p
source('~/.active-rstudio-document', echo=TRUE)
p <- ggplot(mm, aes(x = weekNum , y = scaleMean * 4))
p <- p + geom_line()
#p <- p + stat_smooth(se = FALSE, aes(group = 1), n=30, fill="red")
p <- p + coord_equal()
p <- p + scale_colour_gradient(low="red")
p <- p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
p
p
p <- ggplot(mm, aes(x = weekNum , y = scaleMean * 4))
p <- p + geom_line()
#p <- p + stat_smooth(se = FALSE, aes(group = 1), n=30, fill="red")
p <- p + coord_equal()
p <- p + scale_colour_gradient(low="red")
p
p <- ggplot(mm, aes(x = weekNum , y = scaleMean * 4))
p <- p + geom_line()
#p <- p + stat_smooth(se = FALSE, aes(group = 1), n=30, fill="red")
p <- p + coord_equal()
p
p <- ggplot(mm, aes(x = weekNum , y = scaleMean * 4))
p <- p + geom_line(colour = "red")
#p <- p + stat_smooth(se = FALSE, aes(group = 1), n=30, fill="red")
p <- p + coord_equal()
p
p <- ggplot(mm, aes(x = weekNum , y = scaleMean * 4))
p <- p + geom_line(colour = "red")
p <- p + geom_point()
#p <- p + stat_smooth(se = FALSE, aes(group = 1), n=30, fill="red")
p <- p + coord_equal()
p
p <- ggplot(mm, aes(x = weekNum , y = scaleMean * 4))
p <- p + geom_line(colour = "red")
p <- p + geom_point(colour = "blue")
#p <- p + stat_smooth(se = FALSE, aes(group = 1), n=30, fill="red")
p <- p + coord_equal()
p
source('~/.active-rstudio-document', echo=TRUE)
p
# change from monthNum to weekNum
p <- ggplot(mm, aes(x = weekNum , y = scaleMean * 4))
p <- p + geom_line(colour = "red")
p <- p + geom_point(colour = "blue", size = 2)
#p <- p + stat_smooth(se = FALSE, aes(group = 1), n=30, fill="red")
p <- p + coord_equal()
p
p <- p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
p
# change from monthNum to weekNum
p <- ggplot(mm, aes(x = weekNum , y = scaleMean * 4))
p <- p + geom_line(colour = "red")
p <- p + geom_point(colour = "blue", size = 1)
#p <- p + stat_smooth(se = FALSE, aes(group = 1), n=30, fill="red")
p <- p + coord_equal()
p
p <- p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
p
#p <- p + geom_bar(stat = "identity", fill="#999999", colour="#999999")
# change from monthNum to weekNum
p <- ggplot(mm, aes(x = weekNum , y = scaleMean * 4))
p <- p + geom_line(colour = "red")
p <- p + geom_point(colour = "blue", size = 1.5)
#p <- p + stat_smooth(se = FALSE, aes(group = 1), n=30, fill="red")
p <- p + coord_equal()
p
p <- p + theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
p
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?matrix
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
source('~/.active-rstudio-document', echo=TRUE)
mRaw <- matrix(1,2,2,1.5,1.5,-1.5,-2,-1,-2, 1.5, ncol = 2, nrow = 5, byrow = TRUE)
mRaw <- matrix(c(1,2,2,1.5,1.5,-1.5,-2,-1,-2, 1.5), ncol = 2, nrow = 5, byrow = TRUE)
mRaw
mRaw <- matrix(c(1,2,2,1.5,1.5,-1.5,-2,-1,-2, 1.5),nrow = 5, byrow = TRUE)
mRaw
source('~/.active-rstudio-document', echo=TRUE)
dimnames(mRaw) <- list(person,test)
dimnames(mRaw) <- list(test,person)
dim(mRaw)
length(test)
length(test)
length(person)
source('~/.active-rstudio-document', echo=TRUE)
dimnames(mRaw) <- list(person, test)
mRaw
source('~/.active-rstudio-document', echo=TRUE)
test <- c('test1', 'test2')
person <- c('A', 'B', 'C', 'D', 'E')
mRaw <- matrix(c(1,2,2,1.5,1.5,-1.5,-2,-1,-2, 1.5),nrow = 5, byrow = TRUE)
dimnames(mRaw) <- list(person, test)
mAv <- matrix(c(0.5,1,1,0.5,0.5,-1,-0.5,-0.5,0,0.5),nrow = 5, byrow = TRUE)
dimnames(mAv) <- list(person, test)
mRaw - mAv
library("Matrix", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?norm
mDevAv
source('~/.active-rstudio-document', echo=TRUE)
mDevAv
norm(mDevAv, "F")
norm(mDevAv)
lapply(MDevAv, 2, mean)
apply(MDevAv, 2, mean)
lapply(mDevAv, 2, mean)
lapply(mDevAv, 1, mean)
apply(mDevAv, 1, mean)
apply(mDevAv, 1, sum)
mDevAv
apply(mDevAv, 1, function(x) {sum(x)})
apply(mDevAv, 1, function(x) {sum(x^2)})
rqrt(9)
sqrt(9)
apply(mDevAv, 1, function(x) {sqrt(x^2)})
apply(mDevAv, 1, function(x) {sum(x^2)})
apply(mDevAv, 1, function(x) {sqrt(sum(x^2))})
source('~/.active-rstudio-document', echo=TRUE)
mDevAv / normDevAv
source('~/.active-rstudio-document', echo=TRUE)
mDevAvUnit
mDevAvUnit *%* t(mDevAvUnit)
class(mDevAvUnit)
solve(mDevAvUnit)
t(mDevAvUnit)
mDevAvUnit %*% t(mDevAvUnit)
acos(mDevSim)
source('~/.active-rstudio-document', echo=TRUE)
acos(mDevSim)
pi()
pi
acos(mDevSim) * 180 / pi
mDevSim
acos(-1)
acos(-1) * 180 / pi
acos(mDevSim) * 180 / pi
val <- acos(mDevSim) * 180 / pi
round(val,2)
source('~/.active-rstudio-document', echo=TRUE)
mDegress
upper.tri(mDegress, diag = FALSE)
source('~/.active-rstudio-document', echo=TRUE)
round(mDevSim, 2)
round(mDevSim, 3)
mDevAvUnit
mDevAvUnit[1,]
mDevAv
mRaw
mAv
